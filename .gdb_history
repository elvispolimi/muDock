b trilinear_interpolation(mudock::grid_map const&, mudock::point3D const&) 
dashboard stack 
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2 
n
p translated_point 
n
p c0 * xyz_d_o.z + c1 * xyz_d.z
p c0
p xyz_d
p xyz_d_o
p map.at(p1)
p p1
p map
p map.at({p1.x, p2.y, p1.z})
p map.at(point3D{p1.x, p2.y, p1.z})
p p1
p map.at(p1.x, p2.y, p1.z)
p map.at(point3D{p1.x, p2.y, p1.z})
p p1
p p2
p map.index.to1D(p1.x, p2.y, p1.z)
p map.grid_values[map.index.to1D(p1.x, p2.y, p1.z)]
p map.grid_values[map.index.to1D(p2.x, p2.y, p1.z)]
p map.grid_values[map.index.to1D(p1.x, p2.y, p1.z)]
p map.grid_values[map.index.to1D(p1.x, p1.y, p1.z)]
p map.grid_values[map.index.to1D(p2.x, p2.y, p2.z)]
backtrace
up 1
p electro_map 
b trilinear_interpolation(mudock::grid_map const&, mudock::point3D const&) 
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
dashboard stack 
b trilinear_interpolation(mudock::grid_map const&, mudock::point3D const&) 
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
dashboard stack
n
n
p p1
p p2
n
p p2
n
p c0
p c1
b trilinear_interpolation(mudock::grid_map const&, mudock::point3D const&) 
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
dashboard stack 
n
p vector_from_origin 
n
p p_low
n
p pu
p u
p u0
dashboard stack 
b trilinear_interpolation(mudock::grid_map const&, mudock::point3D const&) 
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
n
p coordinates_in_grid 
p coordinates_floored 
n
p pu
p px
p py
p pz
n
p map.at(coordinates_floored.x + t, coordinates_floored.y + j, coordinates_floored.z + i)
p map.grid_values[map.index.to1D(coordinates_floored.x + t, coordinates_floored.y + j, coordinates_floored.z + i)]
p map.index.to1D(coordinates_floored.x + t, coordinates_floored.y + j, coordinates_floored.z + i)
p coordinates_floored 
p value
p px
p py
p pz
n
p value
n
s
p x
s
s
n
p n_xy * index_z + index_y * n_x + index_x
n
p grid_values[index.to1D()]
s
n
n
p value
n
s
n
s
s
n
n
s
s
s
s
n
p n_xy * index_z + index_y * n_x + index_x
n
p grid_values[321274]
b grid_electrostatic_map.cpp:58
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
p energy
n
p electrostatic_map.index.to1D(coordinates_floored.x + t, coordinates_floored.y + j, coordinates_floored.z + i)
p electrostatic_map.index.to1D(index_x, index_y, index_z)
p index_x
p index_y
p index_z
p energy
p electrostatic_map.grid_values[0]
n
until
b grid_electrostatic_map.cpp:64
c
d 1
c
disable 2
c
p electrostatic_map.grid_values[0]
n
p electrostatic_map 
p electrostatic_map.get()
p electrostatic_map.get().grid_values 
p electrostatic_map.get().grid_values [0]
p electrostatic_map.get().grid_values[0]
b grid_electrostatic_map.cpp:64
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
p electrostatic_map.get().grid_values[0]
p electrostatic_map.grid_values[0]
n
p electrostatic_map.get().grid_values[0]
n
b trilinear_interpolation(mudock::grid_map const&, mudock::point3D const&) 
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
dashboard s
dashboard stack 
n
p map.grid_values[map.index.to1D]
p map.grid_values[map.index.to1D(coordinates_floored.x + t, coordinates_floored.y + j, coordinates_floored.z + i)]
p coordinates_floored 
b grid_electrostatic_map.cpp:49
cond 2 index_x==28 && index_y==49 && index_z==44
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
n
p index_y
n
b grid_electrostatic_map.cpp:58
c
p energy
exit
b grid_electrostatic_map.cpp:50
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
n
p coord_x
p coord_y
p coord_z
n
p receptor.x(index)
p receptor.atom_x[index]
p receptor.x_coordinates[index]
p indx_r
p distance
p d
p coord_x
p coord_y
p coord_z
p coord_x
p d
p inv_r
preceptor.charge(index)
p receptor.charge(index)
p receptor.atom_charge 
p receptor.atom_charge[index]
p inv_rmax
p r_epsilon_fn[indx_r]
b grid_electrostatic_map.cpp:60
c
p energy
b grid_electrostatic_map.cpp:56
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
n
p receptor.atom_charge[index]
b grid_electrostatic_map.cpp:56
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
n
p receptor.atom_charge[index]
b grid_electrostatic_map.cpp:56
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
p receptor.atom_charge[index]
p receptor.atom_charge[index+1]
p receptor.atom_charge[index+2]
exit
b trilinear_interpolation(mudock::grid_map const&, mudock::point3D const&) 
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
dashboard stack 
n
p px
n
b calc_energy_cpp.53
b calc_energy_cpp.cpp:53
c
p value
n
p atom_charge
b calc_energy_cpp.cpp:220
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
dashboard stack 
p atom_charge 
n
p elect_total 
p coord_x
p coord
p elect_total 
p index
p trilinear_interpolation(electro_map, coord)
p atom_charge
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
s
n
p px
p px
p coord
n
u
c
p index
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2  > out
n
p emap_total 
n
p elect_total 
p emap_total 
p dmap_total 
b calc_energy_cpp.cpp:227
d 1
c
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2 
backtrace
b calc_energy_cpp.cpp:242

run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2 
dashboard  stack 
p num_atoms 
p num_atoms 
b calc_energy_cpp.cpp:242
run --use CPP:CPU:0 --protein ~/ht_dataset/1a30_pocket.pdb < ~/ht_dataset/1a30_ligand.mol2 
p num_atoms
c
d 1
c
